<?php

namespace Busybee\SystemBundle\Entity;

use Doctrine\ORM\EntityRepository ;
use Busybee\SecurityBundle\Entity\User ;

/**
 * SystemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 * @version	27th October 2016
 * @since	20th October 2016
 * @author	Craig Rayner
 */
class SettingRepository extends EntityRepository
{

	protected $setting ;
	protected $currentUser ;
	
	/**
	 * get Setting
	 *
	 * @version	27th October 2016
	 * @since	20th October 2016
	 * @param	string	$name
	 * @param	mixed	$default
	 * @return	mixed	Value
	 */
    public function getSetting($name, $default = null)
    {
        try{
			$this->setting = $this->findOneByName($name);
		} catch (\Exception $e) {
			if ($e->getErrorCode() !== 1146){
				throw new \Exception($e->getMessage());
			}
		}
		if (is_null($this->setting))
			return $default;
		switch ($this->setting->getType())
		{
			case 'string':
				return strval(mb_substr($this->setting->getValue(), 0, 25));
				break;
			case 'boolean':
				return (bool)$this->setting->getValue();
				break;
			default:
				throw new \Exception('The Setting Type ('.$this->setting->getType().') has not been defined.');
		}
		return $this->setting->getValue();
    }
	
	/**
	 * save Setting
	 *
	 * @version	21st October 2016
	 * @since	21st October 2016
	 * @param	Setting Entity
	 * @param	User Entity
	 * @return	void
	 */
	public function saveSetting(\Busybee\SystemBundle\Entity\Setting $setting)
	{			
		$em = $this->getEntityManager();
		$em->persist($setting);
		$em->flush();
	}

	/**
	 * set Setting
	 *
	 * @version	27th October 2016
	 * @since	21st October 2016
	 * @param	string	$name
	 * @param	mixed	$value
	 * @return	mixed	Value
	 */
    public function setSetting($name, $value)
    {
        $x = $this->getSetting($name, $value);
		if (is_null($this->setting))
			return null;
		switch ($this->setting->getType())
		{
			case 'string':
				$value =  strval(mb_substr($value, 0, 25));
				break;
			case 'boolean':
				$value =  (bool) $value ;
				break;
			default:
				throw new \Exception('The Setting Type ('.$this->setting->getType().') has not been defined.');
		}
		$this->setting->setValue($value);
		$this->saveSetting($this->setting);
		return $this ;
    }

	/**
	 * set Current User
	 *
	 * @version	26th October 2016
	 * @since	26th October 2016
	 * @param	Entity/User
	 * @return	this
	 */
    public function setCurrentUser($user)
    {
        $this->currentUser = $user ;
		return $this ;
    }

	/**
	 * get Current User
	 *
	 * @version	26th October 2016
	 * @since	26th October 2016
	 * @return	Entity/User
	 */
    public function getCurrentUser()
    {
        return $this->currentUser ;
    }
}
