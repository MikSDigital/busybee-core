{# src/Busybee/PersonBundle/Resources/views/Person/edit.html.twig #}

{% trans_default_domain "BusybeePersonBundle" %}

{% extends "BusybeeHomeBundle:Default:template.html.twig" %}

{% form_theme form "BusybeeFormBundle:Template:bootstrap.html.twig" %}

{% block stylesheets %}
	{{ parent() }}
	{% include 'BusybeeHomeBundle:AutoComplete:style.html.twig' %}
{% endblock stylesheets %}


{% block title %}{{ parent() }}{% if id == 'Add' %}{{ 'person.staff.add.title'|trans }}{% else %}{{ 'person.staff.edit.title'|trans }}{% endif %}{% endblock title %}
{% block headerTitle %}{% if id == 'Add' %}{{ 'person.staff.add.title'|trans }}{% else %}{{ 'person.staff.edit.title'|trans }}{% endif %}{% endblock headerTitle %}
{% block headerLead %}{% if id == 'Add' %}{{ 'person.staff.add.description'|trans }}{% else %}{{ 'person.staff.edit.description'|trans }}{% endif %}{% endblock headerLead %}

{% block contentContainer %}
{{ all_form_errors(fullForm, "div", "alert alert-danger fadeAlert") }}
{{ form_start(form) }}
<div id="personTabs">
	<ul class="nav nav-tabs" role="tablist">
		<li><a href="#person" role="tab" data-toggle="tab">{{ 'person.tab.person'|trans }}</a></li>
		<li><a href="#contact" role="tab" data-toggle="tab">{{ 'person.tab.contact'|trans }}</a></li>
		<li><a href="#address1" role="tab" data-toggle="tab">{{ 'person.tab.address1'|trans }}</a></li>
		<li><a href="#address2" role="tab" data-toggle="tab">{{ 'person.tab.address2'|trans }}</a></li>
	</ul>
	<div class="tab-content">
		<div class="tab-pane active" id="person" >
			<div class="container-fluid">
				<div class='row' id="personMessage" style="display: none;">
				</div>
			</div>
			{{ include('BusybeePersonBundle:Person:person.html.twig') }}
		</div>
		<div class="tab-pane" id="contact" >
			{% include 'BusybeePersonBundle:Person:contact.html.twig' %}
		</div>
		<div class="tab-pane" id="address1" >
			<div class="container-fluid">
				<div class='row' id="addressMessageaddress1" style="display: none;">
				</div>
			</div>
			{% include 'BusybeePersonBundle:Address:edit.html.twig' with {'form': form.add1, 'address': address1, 'classSuffix': 'address1', 'addressLabel': addressLabel1} %}
			{% do form.address1.setRendered %}
		</div>
		<div class="tab-pane" id="address2" >
			<div class="container-fluid">
				<div class='row' id="addressMessageaddress2" style="display: none;">
				</div>
			</div>
			{% include 'BusybeePersonBundle:Address:edit.html.twig' with {'form': form.add2, 'addressTitle': 'address2.title', 'address': address2, 'classSuffix': 'address2', 'addressLabel': addressLabel2} %}
			{% do form.address2.setRendered %}
		</div>
	</div>
</div>
<div class="container-fluid">
	<div class="row">
		<div class="col-sm-12">
			<div class="form-group text-right" style="margin-bottom: 5px">
				{{ form_widget(form.save) }}
				{{ form_widget(form.cancel) }}
			</div>
		</div>
	</div>
</div>
{{ form_end(form) }}
{% endblock contentContainer %}

{% block javascripts %}
	{{ parent() }}
	{% include 'BusybeePersonBundle:Address:script.html.twig' with {'classSuffix': 'address1'} %}
	{% include 'BusybeePersonBundle:Address:script.html.twig' with {'classSuffix': 'address2'} %}
	{% include 'BusybeePersonBundle:Locality:script.html.twig' with {'classSuffix': 'address1'} %}
	{% include 'BusybeePersonBundle:Locality:script.html.twig' with {'classSuffix': 'address2'} %}
	{% include 'BusybeeHomeBundle:AutoComplete:script.html.twig' %}
	<script>
		$('.beeAddressListaddress1').prop('disabled', true);
		$('.beeAddressListaddress1').autocomplete({
			source: [],
			disabled: true,
			minLength: 2,
			delay: 250,
			focus: function(event, ui) {
				// prevent autocomplete from updating the textbox
				event.preventDefault();
				// manually update the textbox
				$(this).val(ui.item.label);
			},
			select: function(event, ui) {
				// prevent autocomplete from updating the textbox
				event.preventDefault();
				// manually update the textbox and hidden field
				$(this).val(ui.item.label);
				$('.beeAddressValueaddress1').val(ui.item.value);
			}
		});
		$('.beeAddressListaddress2').prop('disabled', true);
		$('.beeAddressListaddress2').autocomplete({
			source: [],
			disabled: true,
			minLength: 2,
			delay: 250,
			focus: function(event, ui) {
				// prevent autocomplete from updating the textbox
				event.preventDefault();
				// manually update the textbox
				$(this).val(ui.item.label);
			},
			select: function(event, ui) {
				// prevent autocomplete from updating the textbox
				event.preventDefault();
				// manually update the textbox and hidden field
				$(this).val(ui.item.label);
				$('.beeAddressValueaddress2').val(ui.item.value);
			}
		});
		$( document ).ready(function() {
			$.ajax({
				url: '{{ path('address_fetch') }}',	
				data: {'id': {% if form.address1.vars.value > 0 %}{{ form.address1.vars.value }}{% else %}0{% endif %} },
				type: 'POST',
				success: function(data) {
					$('.beeLine1address1').val(data.line1);
					$('.beeLine2address1').val(data.line2);
					$('.beeLocalityaddress1').val(data.locality);
					$('.beeTerritoryaddress1').val(data.territory);
					$('.beeCountryaddress1').val(data.country);
					$('.beePostCodeaddress1').val(data.postCode);
				}
			});
			$.ajax({
				url: '{{ path('address_fetch') }}',	
				data: {'id': {% if form.address2.vars.value > 0 %}{{ form.address2.vars.value }}{% else %}0{% endif %} },
				type: 'POST',
				success: function(data) {
					$('.beeLine1address2').val(data.line1);
					$('.beeLine2address2').val(data.line2);
					$('.beeLocalityaddress2').val(data.locality);
					$('.beeTerritoryaddress2').val(data.territory);
					$('.beeCountryaddress2').val(data.country);
					$('.beePostCodeaddress2').val(data.postCode);
				}
			});
		});
	</script>

	<script>
		$('#addPhoneButton').click(function(e) {
		
			e.preventDefault();
		
			var $collectionHolder  = $('.phoneNumberList');
			
			$collectionHolder.data('index', $collectionHolder.find('.phoneNumber').length);
			
			var index = $collectionHolder.data('index');
			
			var prototype = $collectionHolder.data('prototype');
			
			var newForm = prototype.replace(/__name__/g, index);
						
			$('.phoneNumberList').append(newForm);
			
			$('#person_phone_' + index + '_phoneNumber').autocomplete({
				source: '{{ path('phone_fetch') }}',
				minLength: 4,
				delay: 250,
				focus: function(event, ui) {
					// prevent autocomplete from updating the textbox
					event.preventDefault();
					// manually update the textbox
					$(this).val(ui.item.label);
				},
				select: function(event, ui) {
					// prevent autocomplete from updating the textbox
					event.preventDefault();
					// manually update the textbox and hidden field
					$(this).val(ui.item.label);
				}
			});
			$('#person_phone_' + index + '_phoneNumber').prop('readonly', false);

			$collectionHolder.data('index', index + 1);
			
			$('.deletePhoneButton').hide();


		});
		$('#addPhoneForm').hide();

		$('.deletePhoneButton').click(function(e) {
			e.preventDefault();
			
			var id = $(this).attr('id');

			$('#phone_' + id.substring(12)).remove();
			
			$('#addPhoneButton').hide();
		});
		
		if ( $(".fadeAlert").length ) {
 	   		$(".fadeAlert").fadeOut(3000);
		}

	</script>

{% endblock javascripts %}
