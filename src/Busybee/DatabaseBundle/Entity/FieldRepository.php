<?php

namespace Busybee\DatabaseBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * FieldRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FieldRepository extends EntityRepository
{
	public function createNew()
	{
		return new \Busybee\DatabaseBundle\Entity\Field();
	}
	
	public function findByTable( \Busybee\DatabaseBundle\Entity\Table $table )
	{
		return $this->createQueryBuilder('a')
			->join('a.table', 't')
			->where('t.name = :search')
			->addOrderBy('a.sortkey' , 'ASC')
			->setParameter('search', $table->getName())
			->getQuery()
			->getResult();
	}
	
	public function findOneBy( array $criteria )
	{
		$field = parent::findOneBy($criteria);
		if (! empty($field))
		{
			if (! empty($field->getSelectRole()))
				$field->getSelectRole()->getId();
			if (! empty($field->getSelectTable()))
				$field->getSelectTable()->getId();
		} else
			$field = NULL;
		return $field;
	}

	public function findOneByNameTableWas(\Busybee\DatabaseBundle\Entity\Field $field, \Busybee\DatabaseBundle\Entity\Table $table)
	{
		$query = $this->createQueryBuilder('f');
		$id = $query
			->select('f.id')
			->leftJoin('f.table', 't')
			->where('t.name = :tableName')->setParameter('tableName', $table->getName())
			->andWhere('f.name = :fieldName')->setParameter('fieldName', $field->getName())
			->getQuery()
			->getResult();
		if (empty($id))
		{
			if (! empty($field->getWas()))
				foreach ($field->getWas() as $fieldName)
				{	
					$q = $this->createQueryBuilder('f');
					$id = $q
							->select('f.id')
							->leftJoin('f.table', 't')
							->where('f.name = :fieldName')->setParameter('fieldName', str_replace(' ', '_', trim($fieldName)))
							->andwhere('t.name = :tableName')->setParameter('tableName', $table->getName())
							->getQuery()
							->getResult();
					if (! empty($id) ) 
						return $this->find($id[0]['id']) ;
				}
			return NULL;
		}
		return $this->find($id[0]['id']) ;
	}

	public function getRepositoryName()
	{
		return 'field.repository';
	}
}
